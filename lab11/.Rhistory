ggplot(aes(x=sex))+geom_bar()
elephants %>%
ggplot(aes(x=sex, y=age))+geom_boxplot()
elephants %>%
ggplot(aes(x=age, y=height))+geom_point()
elephants %>%
ggplot(aes(x=age, y=height))+geom_point()+geom_smooth(method="lm")
elephants %>%
ggplot(aes(x=age, y=height))+geom_point()+geom_smooth(method="lm", se=F)
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F)
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F)+
labs(title="Elephant Age vs. Height",
x="Age",
y="Height")
y="Height (cm)"
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F)+
labs(title="Elephant Age vs. Height",
x="Age",
y="Height (cm)")
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F) +
labs(title = "Elephant Age vs. Height",
x = "Age",
y = "Height") +
theme(plot.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12))
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F) +
labs(title = "Elephant Age vs. Height",
x = "Age",
y = "Height") +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F) +
labs(title = "Elephant Age vs. Height",
x = "Age",
y = "Height") +
theme(plot.title = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F) +
labs(title = "Elephant Age vs. Height",
x = "Age",
y = "Height") +
theme(plot.title = element_text(size = rel(1.25), hjust = 1))
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F) +
labs(title = "Elephant Age vs. Height",
x = "Age",
y = "Height") +
theme(plot.title = element_text(size = rel(1.5), hjust = 1))
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F) +
labs(title = "Elephant Age vs. Height",
x = "Age",
y = "Height") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F) +
labs(title = "Elephant Age vs. Height",
x = "Age",
y = "Height") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0))
elephants %>%
ggplot(aes(x=age, y=height)) + geom_point() + geom_smooth(method=lm, se=F) +
labs(title = "Elephant Age vs. Height",
x = "Age",
y = "Height") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
elephants %>%
ggplot(aes(sex, fill=sex))+geom_bar()
elephants %>%
ggplot(aes(sex, fill=sex))+geom_bar()+
labs(title = "# Elephants by Sex",
x = "Sex",
y = "n") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
elephants %>%
ggplot(aes(sex, fill=sex))+geom_bar()+
labs(title = "# Elephants by Sex",
x = "Sex",
y = NULL) +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
life_history %>%
ggplot(aes(x=gestation, y=log10(mass), size=mass))+
geom_point(na.rm=T)
life_history %>%
filter(gestation>20)
homerange <- read_csv(here("lab10", "data", "Tamburelloetal_HomeRangeDatabase.csv"))
names(homerange)
homerange %>%
ggplot(aes(x=thermoregulation, fill=thermoregulation))+
geom_bar()
homerange %>%
ggplot(aes(x=thermoregulation, fill=thermoregulation))+
geom_bar()+
labs(title = "# Taxa by Thermoregulation Type",
x = "Thermoregulation",
y = "n") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra))+ geom_point()
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra))+ geom_point()+
labs(title = "Mass vs. Homerange",
x = "log10.mass",
y = "log10.hra") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra, size=mean.mass.g))+ geom_point()+
labs(title = "Mass vs. Homerange",
x = "log10.mass",
y = "log10.hra") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra, size=3))+ geom_point()+
labs(title = "Mass vs. Homerange",
x = "log10.mass",
y = "log10.hra") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra, size=2))+ geom_point()+
labs(title = "Mass vs. Homerange",
x = "log10.mass",
y = "log10.hra") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra, size=0.5))+ geom_point()+
labs(title = "Mass vs. Homerange",
x = "log10.mass",
y = "log10.hra") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
mean.mass.g
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra, size=mean.mass.g))+ geom_point()+
labs(title = "Mass vs. Homerange",
x = "log10.mass",
y = "log10.hra") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra))+ geom_point(size=3)+
labs(title = "Mass vs. Homerange",
x = "log10.mass",
y = "log10.hra") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra))+ geom_point(size=1)+
labs(title = "Mass vs. Homerange",
x = "log10.mass",
y = "log10.hra") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
homerange %>%
ggplot(aes(x=log10.mass, y=log10.hra))+ geom_point(size=0.75)+
labs(title = "Mass vs. Homerange",
x = "log10.mass",
y = "log10.hra") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
library(tidyverse)
library(RColorBrewer)
library(paletteer)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(alpha = 0.6, color = "black")+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(alpha = 0.6, color = "black", bins=40)+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_density(fill="steelblue", alpha  =0.6, color = "black")+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) +
geom_histogram(aes(y = ..density..), binwidth = .4, fill = "steelblue", alpha = 0.8, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")
homerange <- homerange %>%
mutate(mass_category = case_when(log10.mass <= 1.75 ~ "small",
log10.mass > 1.75 & log10.mass <= 2.75 ~ "medium",
log10.mass > 2.75 ~ "large"))
homerange %>%
ggplot(aes(x = mass_category, fill = trophic.guild)) +
geom_bar() +
coord_flip() +
labs(title = "Observations by Taxon and Mass Category in Homerange Data",
x = "Mass Category",
fill = "Trophic Guild")
summary(homerange$log10.hra)
#install.packages("gtools")
library(gtools)
quartiles <- quantcut(homerange$log10.hra)
table(quartiles)
homerange <-
homerange %>%
mutate(range_category = case_when(log10.hra <3.65 ~ "very small",
log10.hra >=3.65 & log10.hra <4.59 ~ "small",
log10.hra >=4.59 & log10.hra <=6.02 ~ "medium",
log10.hra >=6.02 ~ "large"))
homerange %>%
ggplot(aes(x=range_category, fill=class))+
geom_bar(position="dodge")
homerange %>%
filter(range_category=="small") %>%
ggplot(aes(x=class, y=log10.mass, fill=class)) +
geom_boxplot(alpha=0.75)
?RColorBrewer
display.brewer.pal(8,"BrBG")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(alpha=0.9, na.rm=T)+
labs(title = "Observations by Taxon in Homerange Data",
x = "Taxonomic Group",
fill= "Trophic Guild")+
theme_linedraw()+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1))+
scale_fill_brewer(palette = "Paired")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(alpha=0.9, na.rm=T, position="dodge")+
labs(title = "Observations by Taxon in Homerange Data",
x = "Taxonomic Group",
fill= "Trophic Guild")+
theme_linedraw()+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1))+
scale_fill_brewer(palette = "Paired")
colors <- paletteer::palettes_d_names
my_palette <- paletteer_d(package = "ggsci", palette = "springfield_simpsons")
library(paletteer)
my_palette <- paletteer_d(palette = "springfield_simpsons")
my_palette <- paletteer_d(package = "ggsci", palette = "simpsons")
library(ggsci)
install.packages("ggsci")
library(ggsci)
my_palette <- paletteer_d(package = "ggsci", palette = "simpsons")
rm(colors)
colors <- paletteer::palettes_d_names
View(colors)
my_palette <- paletteer_d(package = ggsci, palette = springfield_simpsons)
my_palette <- paletteer_d(ggsci::springfield_simpsons)
my_palette <- paletteer_d("ggsci::springfield_simpsons")
barplot(rep(1,14), axes=FALSE, col=my_palette)
install.packages(c("cluster", "testthat"))
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- read_csv(here("lab11", "data", "Tamburelloetal_HomeRangeDatabase.csv"))
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge")
p
p+theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p+theme_linedraw()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
#install.packages("ggthemes")
library(ggthemes)
ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
p+ theme_pander()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
?RColorBrewer
display.brewer.pal(8,"PRGn")
p+scale_fill_brewer(palette = "Paired")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
colors <- paletteer::palettes_d_names
my_palette <- paletteer_d("ggsci::hallmarks_light_cosmic")
barplot(rep(1,14), axes=FALSE, col=my_palette)
p+scale_fill_manual(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
homerange %>%
ggplot(aes(x = log10.mass, y = log10.hra, color = locomotion)) +
geom_point() +
xlim(0, 4) +
ylim(1, 6)
p2 <- homerange %>%
ggplot(aes(x = log10.mass)) +
geom_density()
p2+ facet_wrap(~taxon)
p2+facet_grid(thermoregulation~class)
homerange %>%
ggplot(aes(x = log10.mass, y = log10.hra, color = locomotion)) +
scale_colour_manual(values=my_palette)+
geom_point() +
xlim(0, 4) +
ylim(1, 6)
homerange %>%
ggplot(aes(x = log10.mass, y = log10.hra, color = locomotion)) +
geom_point() +
xlim(0, 4) +
ylim(1, 6)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
#install.packages("gapminder")
library("gapminder")
glimpse(gapminder)
summary(gapminder)
naniar::miss_var_summary(gapminder)
setwd("~/Desktop/BIS15W2021_ibluestein/lab11")
names(gapminder)
gapminder %>%
group_by(lifeExp) %>%
summarise(mean_life = mean(lifeExp), max_life = max(lifeExp), min_life = min(lifeExp))
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp), max_life = max(lifeExp), min_life = min(lifeExp))
gapminder %>%
group_by(year, lifeExp) %>%
ggplot(aes(x = year, y = lifeExp))+
geom_line
gapminder %>%
group_by(year, lifeExp) %>%
ggplot(aes(x = year, y = lifeExp))+
geom_line()
gapminder %>%
group_by(year) %>%
ggplot(aes(x = year, y = lifeExp))+
geom_line()
gapminder %>%
group_by(year) %>%
ggplot(aes(x = year, y = lifeExp))+
geom_line()
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp))+
geom_line()
gapminder %>%
group_by(year, lifeExp) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp))+
geom_line()
gapminder %>%
group_by(year, lifeExp) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()
gapminder %>%
group_by(year, lifeExp) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme(axis.text.x = element_text(angle = 60, hjust=1))
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggthemes)
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme_solid
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme(axis.text.x = element_text(angle = 60, hjust=1))
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme_economist_white()
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme_pander()
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme_base()
gapminder$year <- as.factor(gapminder$year)
summary(gapminder)
naniar::miss_var_summary(gapminder)
names(gapminder)
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp), max_life = max(lifeExp), min_life = min(lifeExp))
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme_base()
gapminder$year <- as.integer(gapminder$year)
summary(gapminder)
naniar::miss_var_summary(gapminder)
names(gapminder)
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp), max_life = max(lifeExp), min_life = min(lifeExp))
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme_base()
gapminder %>%
group_by(year) %>%
summarise(mean_life = mean(lifeExp)) %>%
ggplot(aes(x = year, y = mean_life))+
geom_line()+
labs(title = "Average Life Expectancy.",
x = "Year",
y= "Life Expectancy")+
theme_linedraw()
glimpse(gapminder)
gapminder$year <- as.double(gapminder$year)
glimpse(gapminder)
