turtles <- readr::read_csv(here("Final Project", "Data", "pop_survey_tagging_data.csv")) %>% clean_names()
glimpse(turtles)
turtles
summary(turtles)
naniar::miss_var_summary(turtles)
turtles %>%
select(sex_testosterone_level_2)
turtles %>%
group_by(gear) %>%
ggplot(aes(x = gear, fill = species))+
coord_flip()+
scale_y_log10()+
scale_fill_brewer(palette = "BrBG")+
labs(title = "Methods of Turtle Capture/sighting",
x = "n",
y= "Method")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
turtles %>%
group_by(year) %>%
ggplot(aes(x = year, fill = cap_region))+
geom_bar()+
labs(title = "Turtle Capture by Location",
x = "Year",
y= "n")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
turtles %>%
na_if("0") %>%
summary(weight)
turtles %>%
mutate(mass_category = case_when(weight <= 30 ~ "small", weight >= 30 ~ "large")) %>%
group_by(year) %>%
ggplot(aes(x = year, fill = mass_category))+
geom_bar()+
labs(title = "Turtle Capture by Weight Class",
x = "Year",
y= "n")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
turtles %>%
group_by(gear) %>%
ggplot(aes(x = gear, fill = species))+
coord_flip()+
scale_y_log10()+
labs(title = "Methods of Turtle Capture/sighting",
x = "n",
y= "Method")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
turtles %>%
group_by(gear) %>%
ggplot(aes(x = gear, fill = species))+
coord_flip()+
scale_y_log10()+
scale_fill_brewer(palette = "BrBG")+
labs(title = "Methods of Turtle Capture/sighting",
x = "n",
y= "Method")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
turtles %>%
group_by(gear) %>%
ggplot(aes(x = gear, fill = species))+
coord_flip()+
scale_y_log10()+
scale_fill_brewer(palette = "BrBG")+
labs(title = "Methods of Turtle Capture/sighting",
x = "n",
y= "Method")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
turtles %>%
group_by(gear) %>%
ggplot(aes(x = gear, fill = species))+
coord_flip()+
scale_y_log10()+
scale_fill_brewer(palette = "BrBG")+
labs(title = "Methods of Turtle Capture/sighting",
x = "n",
y= "Method")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
turtles %>%
group_by(gear) %>%
ggplot(aes(x = gear, fill = species))+
geom_bar()+
coord_flip()+
scale_y_log10()+
scale_fill_brewer(palette = "BrBG")+
labs(title = "Methods of Turtle Capture/sighting",
x = "n",
y= "Method")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
names(spider_list)
names(spider_list[[3]])
names(spider_list[[3]])
names(spider_list[[1]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list$Butte
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
View(table_A)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
summary(spiders_with_locs)
day <- today()
str(day)
day <- today()
str(day)
class(spiders_with_locs$Date)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
ymd(dateformat1)
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat1)
mdy_hms(dateformat4)
ymd_hms(dateformat5)
install.packages("albersusa")
install.packages(c("broom", "cli", "pillar", "pkgload", "rmarkdown"))
yinstall.packages("albersusa")
install.packages("albersusa")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("albersusa")
library(albersusa)
us_comp <- usa_sf() # get a composite map of the USA
cnty_comp <- counties_sf() # get a composite map of USA counties
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
#install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
#install.packages("albersusa")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
devtools::install_github("hrbrmstr/albersusa")
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map1 <- get_map(bbox, maptype = "toner-2011", source = "stamen")
names(spiders)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude, color = county), size = 1) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
library(albersusa)
us_comp <- usa_sf() # get a composite map of the USA
cnty_comp <- counties_sf() # get a composite map of USA counties
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
install.packages("svglite")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
library(svglite)
install.packages(c("lubridate", "tibble", "units"))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(naniar)
library(janitor)
library(shiny)
library(paletteer)
library(ggmap)
library(rgeos)
library(rgdal)
library(devtools)
#turtles<-read.csv(here("Final Project","Turtle_data.csv"))
turtles<-read.csv("Turtle_data.csv")
turtles_tidy<-turtles%>%
na_if("")%>%
na_if("0")%>%
na_if("0.0")%>%
mutate(dead_alive_new=if_else(Dead_Alive=="alive","Alive",Dead_Alive))
library(lubridate)
turtles3<-turtles_tidy%>%
mutate(DateCapture_new=dmy(DateCapture))%>%
filter(!is.na(DateCapture_new))%>%
mutate(Capture_month=month(DateCapture_new))%>%
mutate(Capture_day=day(DateCapture_new))%>%
mutate(capture_week_day=wday(DateCapture_new))
head(turtles3)
turtles3%>%
select(Cap_Latitude,Cap_Longitude)%>%
summary()
cap_lat <- c(33.49, 38.41)
cap_long <- c(-79.08, -75.47)
bbox <- make_bbox(cap_long, cap_lat, f = 0.1)
cap_map_base <- get_map(bbox, maptype = "terrain-background", source = "stamen")
ggmap(cap_map_base)
ggmap(cap_map_base) +
geom_point(data = turtles3, aes(Cap_Longitude,Cap_Latitude,color=Species,shape=dead_alive_new), size = 2, alpha = 0.7) +
scale_color_brewer(palette = "Spectral")+
labs(x = "Longitude", y = "Latitude", title = "Capture Locations")
turtles3%>%
select(Rel_Latitude,Rel_Longitude)%>%
summary()
rel_lat <- c(27.82, 39)
rel_long <- c(-81.24, -70)
bbox2 <- make_bbox(rel_long, rel_lat, f = 0.05)
rel_map_base <- get_map(bbox2, maptype = "terrain-background", source = "stamen")
ggmap(rel_map_base)
ggmap(rel_map_base) +
geom_point(data = turtles3, aes(Rel_Longitude,Rel_Latitude,color=Species), size = 2, alpha = 0.7) +
scale_color_brewer(palette = "Spectral")+
labs(x = "Longitude", y = "Latitude", title = "Release Locations")
turtles3%>%
group_by(year)%>%
summarise(n())
turtles3%>%
group_by(year)%>%
ggplot(aes(x=year,fill=dead_alive_new))+
geom_bar(position = "dodge")+
scale_fill_brewer(palette = "Spectral")
turtles3%>%
group_by(Capture_month)%>%
summarise(n())
turtles3%>%
ggplot(aes(month(x=DateCapture_new,label=TRUE)))+
geom_bar(position = "dodge")+
labs(x = NULL,
y = "Number of Captures")
turtles3%>%
group_by(Capture_day)%>%
summarise(n())
turtles3%>%
ggplot(aes(day(x=DateCapture_new)))+
geom_bar()+
labs(x = NULL,
y = "Number of Captures")
turtles3%>%
group_by(capture_week_day)%>%
summarise(n())
turtles3%>%
ggplot(aes(wday(x=DateCapture_new,label=TRUE)))+
geom_bar()+
labs(x = NULL,
y = "Number of Captures")
turtles3%>%
group_by(year)%>%
mutate(mean_body_length=mean(SCL_tip,na.rm=T))%>%
ggplot(aes(x=year,y=mean_body_length,group=1,color=Species))+
geom_line()+
geom_point()+
facet_wrap(~Species)+
scale_color_brewer(palette = "Spectral")
turtles3%>%
ggplot(aes(x=Species,y=CCL_tip,color=Species))+
geom_boxplot()+
scale_color_brewer(palette = "Spectral")
turtles3%>%
filter(Gear!=""&Species!="")%>%
ggplot(aes(x=Gear,fill=Species))+
geom_bar(position = "dodge")+
labs(title = "Gear used for Different Species",x="Gear",y="Number Captured with Given Method")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))+
scale_y_log10()+
scale_fill_brewer(palette = "Spectral")
turtles %>%
group_by(year) %>%
ggplot(aes(x = year, fill = Cap_Region))+
geom_bar()+
labs(title = "Turtle Capture by Location",
x = "Year",
y= "n")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
#Bias data because I'm excluding NAs
turtles %>%
mutate(mass_category = case_when(Weight <= 30 ~ "small", Weight >= 30 ~ "large")) %>%
group_by(year) %>%
filter(Weight != "NA") %>%
ggplot(aes(x = year, fill = mass_category))+
geom_bar()+
labs(title = "Turtle Capture by Weight Class",
x = "Year",
y= "n")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))+
scale_fill_brewer(palette = "Spectral")
rel_lat <- c(27.82, 39)
rel_long <- c(-81.24, -36.03)
bbox2 <- make_bbox(rel_long, rel_lat, f = 0.05)
rel_map_base <- get_map(bbox2, maptype = "terrain-background", source = "stamen")
ggmap(rel_map_base)
#map with outlying release points excluded
ggmap(rel_map_base) +
geom_point(data = turtles3, aes(Rel_Longitude,Rel_Latitude,color=Species), size = 2, alpha = 0.7) +
scale_color_brewer(palette = "Spectral")+
labs(x = "Longitude", y = "Latitude", title = "Release Locations")
rel_lat <- c(27.82, 39)
rel_long <- c(-81.24, -70)
bbox2 <- make_bbox(rel_long, rel_lat, f = 0.05)
rel_map_base <- get_map(bbox2, maptype = "terrain-background", source = "stamen")
ggmap(rel_map_base)
rel_map_base <- get_map(bbox2, maptype = "terrain-background", source = "stamen")
ggmap(rel_map_base)
#map with outlying release points excluded
ggmap(rel_map_base) +
geom_point(data = turtles3, aes(Rel_Longitude,Rel_Latitude,color=Species), size = 2, alpha = 0.7) +
scale_color_brewer(palette = "Spectral")+
labs(x = "Longitude", y = "Latitude", title = "Release Locations")
turtles3%>%
group_by(year)%>%
ggplot(aes(x=year,fill=dead_alive_new))+
geom_bar(position = "dodge")+
scale_fill_brewer(palette = "paired")
turtles3%>%
group_by(year)%>%
ggplot(aes(x=year,fill=dead_alive_new))+
geom_bar(position = "dodge")+
turtles3%>%
group_by(year)%>%
ggplot(aes(x=year,fill=dead_alive_new))+
geom_bar(position = "dodge")
turtles %>%
group_by(year) %>%
ggplot(aes(x = year, fill = Cap_Region))+
geom_bar()+
labs(title = "Turtle Capture by Location",
x = "Year",
y= "n")+
theme_linedraw()+
turtles %>%
group_by(year) %>%
ggplot(aes(x = year, fill = Cap_Region))+
geom_bar()+
labs(title = "Turtle Capture by Location",
x = "Year",
y= "n")+
theme_linedraw()
turtles %>%
group_by(year) %>%
ggplot(aes(x = year, fill = Cap_Region))+
geom_bar()+
labs(title = "Turtle Capture by Location",
x = "Year",
y= "n")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
#Bias data because I'm excluding NAs
turtles %>%
mutate(mass_category = case_when(Weight <= 30 ~ "small", Weight >= 30 ~ "large")) %>%
group_by(year) %>%
filter(Weight != "NA") %>%
ggplot(aes(x = year, fill = mass_category))+
geom_bar()+
labs(title = "Turtle Capture by Weight Class",
x = "Year",
y= "n")+
theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust = 1), plot.title = element_text(size = rel(1.5), hjust = 0.5))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(naniar)
library(janitor)
library(shiny)
library(paletteer)
library(ggmap)
library(rgeos)
library(rgdal)
library(devtools)
ggmap(cap_map_base) +
<<<<<<< Updated upstream
cap_map_base <- get_map(bbox, maptype = "terrain-background", source = "stamen")
ggmap(cap_map_base)
ggmap(cap_map_base) +
<<<<<<< Updated upstream
